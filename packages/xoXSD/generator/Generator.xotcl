package provide xoXSD::Generator 0.1

package require tdom
package require XOTcl
package require xoXSD::Generator::Parser

namespace import -force ::xotcl::*

namespace eval ::xoXSD {
	
::xotcl::Class Generator -slots {
	::xotcl::Attribute xoNamespacePrefix
	::xotcl::Attribute parsers
}

Generator instproc init {} {
	my parsers [list]
}
	
Generator instproc setNamespace {ns} {
	my xoNamespacePrefix $ns
}

Generator instproc getTargetPrefix {document} {
	set xoNamespaces() ""
	set xoTargetNamespace [$document getAttribute "targetNamespace"]
	
	foreach attr [$document attributes "xmlns:*"] {
		set prefix [lindex $attr 0]
		set attr "xmlns:$prefix"
		set ns [$document getAttribute $attr]
		set xoNamespaces($prefix) $ns
		set xoNamespaces($ns) $prefix
	}
	
	return $xoNamespaces($xoTargetNamespace)
}

Generator instproc addSchema {data} {
	if { [my xoNamespacePrefix] == "" } {
		puts "ERROR: A namespace has to be defined before! (via \"setNamespace\")"
		return
	}	
	
	set doc [dom parse $data] 
	set root [$doc documentElement]
	set targetPrefix [my getTargetPrefix $root]
	set targetNamespace [$root getAttribute "targetNamespace"]
	
	if { [$root nodeName] != "schema" } {
		error "ERROR: $filename is not an XML schema file."
	}

	my lappend parsers [::xoXSD::Generator::Parser::parse $root $targetPrefix $targetNamespace [my xoNamespacePrefix]]
}
	
Generator instproc generate {} {
	set o ""
	append o "package require XOTcl\n"
	append o "package require xoXSD\n\n"
	append o "namespace import -force ::xotcl::*\n"
	append o "namespace import -force ::xoXSD::Slots::*\n\n"
	foreach parser [my parsers] {
		append o "namespace eval ::xoXSD addNamespace \"[$parser getNamespace]\"\n"
	}
	append o "\n"
	foreach parser [my parsers] {
		append o [$parser getDummyClasses]
	}
	foreach parser [my parsers] {
		append o [$parser getClasses]
	}
	return $o
}

}