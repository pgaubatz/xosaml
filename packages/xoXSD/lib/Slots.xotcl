package provide xoXSD::Slots 0.1

package require XOTcl

namespace eval ::xoXSD::Slots {

namespace export *
	
::xotcl::Class XMLAttribute -superclass ::xotcl::Attribute -slots {
	::xotcl::Attribute use 	     -default "optional"
	::xotcl::Attribute namespace -default false
	
	# System-specific attributes:
	::xotcl::Attribute text       -default false
	::xotcl::Attribute enumvalues -default ""
	::xotcl::Attribute any	      -default false
}
	
::xotcl::Class XMLElement -superclass ::xotcl::Attribute -slots {
	::xotcl::Attribute minOccurs -default 1
	::xotcl::Attribute maxOccurs -default 1
	::xotcl::Attribute namespace -default false
	
	# System-specific attributes:
	::xotcl::Attribute sequence  -default 99999
	::xotcl::Attribute any	     -default false
	::xotcl::Attribute anyCounter -default 0
}

::xotcl::Class XMLChild -superclass ::xoXSD::Slots::XMLElement


XMLAttribute instproc getInfo {} {
	set o [list]
	if { [[self] use] != "optional" } {
		lappend o "Use: [[self] use]"
	}
	if { [[self] namespace] != false } {
		lappend o "Namespace: [[self] namespace]"
	}
	return $o
}

XMLAttribute instproc getType {} {
	if { [namespace tail [self]] == "__anyAttribute" } {
		return "<<Any>>"
	} 
	return [[self] type]
}

XMLAttribute instproc getName {n} {
	if { [namespace tail $n] == "__anyAttribute" } {
		return "<<Any>>"
	} 
	if { [namespace tail $n] == "__text" } {
		return "<<Text>>"
	} 
	return [namespace tail $n]
}

XMLElement instproc getInfo {} {
	set o [list]
	if { [[self] minOccurs] != 1 } {
		lappend o "MinOccurs: [[self] minOccurs]"
	}
	if { [[self] maxOccurs] != 1 } {
		lappend o "MaxOccurs: [[self] maxOccurs]"
	}
	if { [[self] namespace] != false } {
		lappend o "Namespace: [[self] namespace]"
	}
	if { [my isNested] } {
		lappend o "Parent: [my getHierarchy]"
	}
	return $o
}

XMLElement instproc isNested {} {
	if { [string first "__choice" [self]] != -1} {
		return true
	}
	if { [string first "__sequence" [self]] != -1 } {
		return true
	}
	return false
}
	
XMLElement instproc getHierarchy {} {
	set h [namespace qualifiers [namespace qualifiers [self]]]
	set h [string map {"::__choice" " <<Choice ("} $h]
	set h [string map {"::__sequence" " <<Sequence ("} $h]
	return "$h)>>"
}

XMLElement instproc getType {} {
	if { [namespace tail [self]] == "__any" } {
		return "<<Any>>"
	} 	
	return [[self] type]
}

XMLElement instproc getName {n} {
	if { [namespace tail $n] == "__any" } {
		return "<<Any>>"
	}
	return [namespace tail $n]
}

}
